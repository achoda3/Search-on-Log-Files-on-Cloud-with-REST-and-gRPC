[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\aryan\AppData\Local\Temp\idea8.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\aryan\AppData\Local\Temp\idea8.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 1.8.0_261)
[debug]       Load.loadUnit: plugins took 130.9297ms
[debug]       Load.loadUnit: defsScala took 0.2692ms
[debug] [Loading] Scanning directory C:\Users\aryan\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\aryan\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.2594 ms
[debug]           Load.resolveProject(global-plugins) took 53.4585ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\aryan\.sbt\1.0\plugins, plugins: List(<none>))) took 101.3104ms
[debug] [Loading] Done in C:\Users\aryan\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 127.8301ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3194ms
[debug]     Load.loadUnit(file:/C:/Users/aryan/.sbt/1.0/plugins/, ...) took 266.1181ms
[debug]   Load.apply: load took 492.7386ms
[debug]   Load.apply: resolveProjects took 7.3594ms
[debug]   Load.apply: finalTransforms took 69.6638ms
[debug]   Load.apply: config.delegates took 11.0802ms
[debug]   Load.apply: Def.make(settings)... took 488.7631ms
[debug]   Load.apply: structureIndex took 114.6408ms
[debug]   Load.apply: mkStreams took 1.6863ms
[info] loading global plugins from C:\Users\aryan\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3765.3064ms
[debug]           Load.loadUnit: plugins took 42.7357ms
[debug]           Load.loadUnit: defsScala took 0.0065ms
[debug] [Loading] Scanning directory C:\Users\aryan\Desktop\Studies\CS 441\ClientHTTP\project
[debug]             Load.loadUnit: mkEval took 13.3672ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\aryan\Desktop\Studies\CS 441\ClientHTTP\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.3572 ms
[info] loading settings for project clienthttp-build from idea8.sbt ...
[debug]               Load.resolveProject(clienthttp-build) took 3.4977ms
[debug]             Load.loadTransitive: finalizeProject(Project(id clienthttp-build, base: C:\Users\aryan\Desktop\Studies\CS 441\ClientHTTP\project, plugins: List(<none>))) took 7.4354ms
[debug] [Loading] Done in C:\Users\aryan\Desktop\Studies\CS 441\ClientHTTP\project, returning: (clienthttp-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 175.8926ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.5391ms
[debug]         Load.loadUnit(file:/C:/Users/aryan/Desktop/Studies/CS%20441/ClientHTTP/project/, ...) took 224.4448ms
[debug]       Load.apply: load took 226.1868ms
[debug]       Load.apply: resolveProjects took 0.2227ms
[debug]       Load.apply: finalTransforms took 7.6878ms
[debug]       Load.apply: config.delegates took 0.3008ms
[debug]       Load.apply: Def.make(settings)... took 154.23ms
[debug]       Load.apply: structureIndex took 30.9807ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\aryan\Desktop\Studies\CS 441\ClientHTTP\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 773.9401ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\aryan\Desktop\Studies\CS 441\ClientHTTP
[debug]       Load.loadUnit: mkEval took 0.2506ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\aryan\Desktop\Studies\CS 441\ClientHTTP, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.2275 ms
[info] loading settings for project clienthttp from build.sbt ...
[debug]         Load.resolveProject(clienthttp) took 35.8542ms
[debug]       Load.loadTransitive: finalizeProject(Project(id clienthttp, base: C:\Users\aryan\Desktop\Studies\CS 441\ClientHTTP, plugins: List(<none>))) took 40.3578ms
[debug] [Loading] Done in C:\Users\aryan\Desktop\Studies\CS 441\ClientHTTP, returning: (clienthttp)
[debug]     Load.loadUnit: loadedProjectsRaw took 127.5568ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.2985ms
[debug]   Load.loadUnit(file:/C:/Users/aryan/Desktop/Studies/CS%20441/ClientHTTP/, ...) took 907.3078ms
[debug] Load.apply: load took 908.9221ms
[debug] Load.apply: resolveProjects took 0.1168ms
[debug] Load.apply: finalTransforms took 23.8942ms
[debug] Load.apply: config.delegates took 0.3808ms
[debug] Load.apply: Def.make(settings)... took 79.0869ms
[debug] Load.apply: structureIndex took 29.8829ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to ClientHTTP (in build file:/C:/Users/aryan/Desktop/Studies/CS%20441/ClientHTTP/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60606 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60606, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ClientHTTP (in build file:/C:/Users/aryan/Desktop/Studies/CS%20441/ClientHTTP/)
[debug] > Exec(idea-shell, None, None)
